apiVersion: apps/v1
kind: Deployment
metadata:
  name: goodz-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: goodz-backend
  template:
    metadata:
      labels:
        app: goodz-backend
    spec:
      serviceAccountName: build-robot
      initContainers:
        - name: secret-injector
          image: asia-southeast2-docker.pkg.dev/pro-icon-428103-v3/secret-injector/secret-injector:latest
          command:
            - "sh"
            - "-c"
            - "/get-secrets.sh"
          env:
            - name: POSTGRES_USER_VERSION
              value: "latest"
            - name: POSTGRES_PASSWORD_VERSION
              value: "latest"
          volumeMounts:
            - name: secrets
              mountPath: "/secrets"
      volumes:
        - name: secrets
          emptyDir: {}
      containers:
        - name: goodz-backend
          volumeMounts:
            - mountPath: "/app/secrets.yml"
              name: secrets
              readOnly: true
              subPath: "secrets.yml"
          image: asia-southeast2-docker.pkg.dev/pro-icon-428103-v3/goodz-backend/goodz-backend:latest
          ports:
            - containerPort: 8080
          env:
            - name: "POSTGRES_DB"
              valueFrom:
                configMapKeyRef:
                  key: "POSTGRES_DB"
                  name: "goodz-backend-config"
            - name: "POSTGRES_HOST"
              valueFrom:
                configMapKeyRef:
                  key: "POSTGRES_HOST"
                  name: "goodz-backend-config"
            - name: "POSTGRES_PORT"
              valueFrom:
                configMapKeyRef:
                  key: "POSTGRES_PORT"
                  name: "goodz-backend-config"
            - name: "APP_PORT"
              valueFrom:
                configMapKeyRef:
                  key: "APP_PORT"
                  name: "goodz-backend-config"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: postgres_password
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: postgres_user
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1000m"